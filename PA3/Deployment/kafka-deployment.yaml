# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: kafka
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: kafka
#   minReadySeconds: 5

#   template:
#     metadata:
#       labels:
#         app: kafka
#     spec:
#       containers:
#       - name: kafka
#         image: 192.168.5.173:5000/kafka
#         ports:
#         - containerPort: 9092
#         env:
#         - name: KAFKA_ADVERTISED_LISTENERS
#           value: "PLAINTEXT://kafka-service:9092"
#         - name: KAFKA_BROKER_ID
#           value: "1"
#         - name: KAFKA_CREATE_TOPICS
#           value: images:1:1

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  replicas: 1
  serviceName: kafka
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: 192.168.5.173:5000/kafka
        env:
          - name: KAFKA_LISTENERS
            value: "PLAINTEXT://0.0.0.0:9092"
          - name: KAFKA_ADVERTISED_LISTENERS
            value: "PLAINTEXT://kafka-1.kafka-headless.default.svc.cluster.local:9092"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper:2181"
          - name: KAFKA_PORT
            value: "9092"
        ports:
          - containerPort: 9092
        volumeMounts:
          - name: log4j-config
            mountPath: /opt/kafka/custom-config/log4j.properties
            subPath: log4j.properties
      volumes:
        - name: log4j-config
          configMap:
            name: log4j-config